#include <iostream>
#include <vector>
#include <string>
using namespace std;

class ToDoList {
private:
    vector<string> tasks;

public:
    void addTask(const string& task) {
        tasks.push_back(task);
        cout << "Task added: " << task << endl;
    }

    void displayTasks() const {
        if (tasks.empty()) {
            cout << "No tasks to display." << endl;
        } else {
            cout << "To-Do List:" << endl;
            for (size_t i = 0; i < tasks.size(); ++i) {
                cout << i + 1 << ". " << tasks[i] << endl;
            }
        }
    }

    void removeTask(int index) {
        if (index <= 0 || index > tasks.size()) {
            cout << "Invalid task number." << endl;
        } else {
            cout << "Task removed: " << tasks[index - 1] << endl;
            tasks.erase(tasks.begin() + index - 1);
        }
    }
};

int main() {
    ToDoList myList;
    int choice;
    string task;
    int taskNumber;

    while (true) {
        cout << "\nTo-Do List Menu:" << endl;
        cout << "1. Add task" << endl;
        cout << "2. Display tasks" << endl;
        cout << "3. Remove task" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter task: ";
                cin.ignore();  // to ignore the newline character left in the buffer
                getline(cin, task);
                myList.addTask(task);
                break;

            case 2:
                myList.displayTasks();
                break;

            case 3:
                cout << "Enter task number to remove: ";
                cin >> taskNumber;
                myList.removeTask(taskNumber);
                break;

            case 4:
                cout << "Exiting..." << endl;
                return 0;

            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
